# vim:ft=sh

source "~/.config/lf/commands/images"
source "~/.config/lf/shortcutrc"
source "~/.config/lf/commands/fzf"
source "~/.config/lf/commands/files_and_dirs"
source "~/.config/lf/commands/archives"

set shell sh
# set shellopts '-ey' # for zsh
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set icons
set drawbox
set hidden true
set period 1
set wrapscroll true
set hiddenfiles ".*:*.aux:*.log:*.bbl:*.bcf:*.blg:*.run.xml"
set previewer ~/.config/lf/preview

# change columns size dependant on the available space
# shellcheck disable=SC1083
cmd recol ${{
    w=$(tput cols)
    if [ $w -le 80 ]; then
        lf -remote "send $id set ratios 1:2"
    elif [ $w -le 160 ]; then
        lf -remote "send $id set ratios 1:2:3"
    else
        lf -remote "send $id set ratios 1:2:3:5"
    fi
}}

recol

# unmap default keybings
map gh
map d
map y
map ,

# copy/yank
map yy :copy
map yn :copy-filename
map yP :copy-absolute-path
map yi :yank-image
map yh :copy-highlighted-file

# paste
map p :paste_try_cow # uses copy-on-write to fast copy files

# cut/delete
map dd :cut
map gd :delete
map D :trash

# navigation/manipulation
map \\ :find-prev # select previous find occurance
map gl :follow_link
map t :toggle # space navigates down after selection
map <c-r> :recol
map <c-a> :select-files
map o :open 
map O %open "$fx"
map <c-z> $kill -STOP $PPID
map <enter> :shell
# duplicate lf with current dir in another terminal
map S & open -na Alacritty --args --working-directory=$PWD -e "lf"

# fzf
map U :fzf-restore

# launch file
map x !$f
# shellcheck disable=1009,1072,1073
map X push !$f<space> # launch file with arguments

# create file/folder
map A push :mkdir<space>
map a push :touch<space>

# vim like mappings with <leader> being ","
map ,r :bulk-rename
map ,st :fzf_search
map ,gg $lazygit
map ,sh :share
map ,ch :chmod
map ,ci :convert-image
map ,f :fzf_jump
map ,t push :tar<space>
map ,z push :zip<space>
map ,e :extract
map <c-o> $lvim +"lua require('persistence').load()" # pwd is current lf dir
map <c-p> $lvim +"lua require('persistence').load({ last = true })" 

# command mode mappings
map <up> cmd-history-prev
map <down> cmd-history-next
cmap <up> cmd-history-prev
cmap <down> cmd-history-next
cmap <tab> cmd-menu-complete
cmap <backtab> cmd-menu-complete-back
